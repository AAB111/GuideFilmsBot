from aiogram import Bot, Dispatcher, types

from config import settings
import sys
from aiogram.filters import CommandStart
import asyncio
import logging

from handlers.search import search_router
from handlers.review import review_router
from handlers.card import card_router
from api.requests import request_auth

dp = Dispatcher()


@dp.message(CommandStart())
async def start(message: types.Message):
    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Ñ–∏–ª—å–º–æ–≤! üé¨\n\n"
        "–Ø - –≤–∞—à –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –≤ —ç—Ç–æ–º —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–º –º–∏—Ä–µ.\n"
        "–ú–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –ª—É—á—à–∏–µ —Ñ–∏–ª—å–º—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ –Ω–∞—Å–ª–∞–∂–¥–µ–Ω–∏—è.\n"
        "–°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ñ–∏–ª—å–º–∞—Ö –∏–ª–∏ —Å–æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π —Ñ–∏–ª—å–º.\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –∏—â–µ—Ç–µ, –ø—Ä–æ—Å—Ç–æ –¥–∞–π—Ç–µ –º–Ω–µ –∑–Ω–∞—Ç—å, –∏ —è –Ω–∞–π–¥—É –¥–ª—è –≤–∞—Å –ø–æ—Ö–æ–∂–∏–µ —Ñ–∏–ª—å–º—ã!\n"
        "–ò –ø–æ–º–Ω–∏—Ç–µ, —è –≤—Å–µ–≥–¥–∞ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –≤ –≤—ã–±–æ—Ä–µ —Ñ–∏–ª—å–º–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –≤–µ—á–µ—Ä–∞! üçø"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/card - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Ñ–∏–ª—å–º–µ\n"
    )
    await message.answer(welcome_text)
    await request_auth(message.from_user.id)


async def main():
    bot = Bot(token=settings.API_TG_BOT_TOKEN)
    dp.include_router(review_router)
    dp.include_router(card_router)
    dp.include_router(search_router)
    await dp.start_polling(bot)


if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())
